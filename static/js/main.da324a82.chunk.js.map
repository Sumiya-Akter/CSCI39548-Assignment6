{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["searchAPI","props","handleInputChange","event","setState","userInput","target","value","handleSearchClick","a","TypedInput","state","linkToAPI","console","log","axios","get","response","apiData","data","found","status","makeTable","currData","table","i","length","push","class","src","image_link","name","brand","product_type","price_sign","price","id","className","type","this","placeholder","onChange","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAwFeA,E,kDAjFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CAAEC,UAAWF,EAAMG,OAAOC,SAXvB,EAenBC,kBAfmB,sBAeC,gCAAAC,EAAA,6DACdC,EAAa,EAAKC,MAAMN,UACxBO,EAAY,+DAAiEF,EACjFG,QAAQC,IAAI,EAAKH,MAAMN,WAHL,kBAKKU,IAAMC,IAAIJ,GALf,OAKZK,EALY,OAMhB,EAAKb,SAAS,CAACc,QAASD,EAASE,KAAMC,OAAO,IAN9B,kDAQZ,KAAMH,WACRJ,QAAQC,IAAI,eAAgB,KAAMG,SAASE,MAC3CN,QAAQC,IAAI,iBAAkB,KAAMG,SAASI,QAC7C,EAAKjB,SAAS,CAACgB,OAAO,KAXR,0DAfD,EA+BnBE,UAAY,WACV,IAAIC,EAAW,EAAKZ,MAAMO,QAEtBM,EAAQ,GAEZ,GAHiB,EAAKb,MAAMS,MAMrB,CACH,IAAK,IAAIK,EAAI,EAAGA,EAAIF,EAASG,OAAQD,IACnCZ,QAAQC,IAAI,EAAKH,MAAMO,SACvBM,EAAMG,KACJ,gCACE,oBAAIC,MAAM,OAAV,SACE,oBAAIA,MAAM,SAAV,SACE,qBAAIA,MAAM,QAAV,UACE,qBAAKC,IAAKN,EAASE,GAAGK,aACtB,+BAAI,4BAAIP,EAASE,GAAGM,OAApB,OACA,8BAAG,uCAAH,IAAkBR,EAASE,GAAGO,MAAM,uBACpC,8CADA,IACsBT,EAASE,GAAGQ,aAAa,uBAC/C,uCAFA,KAEgBV,EAASE,GAAGS,WAAYX,EAASE,GAAGU,eAPpCZ,EAASE,GAAGW,OAcxC,OAAOZ,EApBP,OADAA,EAAMG,KAAK,6BAAa,8CAAH,IACdH,GApCX,EAAKb,MAAQ,CACXO,QAAS,GACTb,UAAW,GACXe,OAAO,GALQ,E,0CA8DnB,WACE,OACE,sBAAKiB,UAAU,MAAf,UACE,sBAAKA,UAAU,aAAf,UACE,0DACA,uBAAOC,KAAK,OAAO/B,MAAOgC,KAAK5B,MAAMN,UAAWmC,YAAY,eAAeC,SAAUF,KAAKrC,oBAC1F,wBAAQmC,UAAU,gBAAgBK,QAASH,KAAK/B,kBAAhD,uBAEF,uBACE,uBAAO4B,GAAG,OAAV,SACE,gCACKG,KAAKjB,uB,GA1EEqB,aCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.da324a82.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\n\n//creates array for api data, an open string for userInput and state is set to false until found\nclass searchAPI extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiData: [],\n      userInput: \"\",\n      found: false\n    }\n  }\n\n  //function for what happens when you input the brand\n  handleInputChange = (event) => {\n    this.setState({ userInput: event.target.value});\n  }\n\n//function for what happens when you click the search button\n  handleSearchClick = async() => {\n    let TypedInput = this.state.userInput;\n    let linkToAPI = 'https://makeup-api.herokuapp.com/api/v1/products.json?brand=' + TypedInput;\n    console.log(this.state.userInput);\n    try {\n      let response = await axios.get(linkToAPI);\n      this.setState({apiData: response.data, found: true})\n    } catch (error) {\n      if (error.response) {\n        console.log(\"Error Data: \", error.response.data); //Not found\n        console.log(\"Error Status: \", error.response.status); //404\n        this.setState({found: false});\n      }\n    }\n  }\n\n  makeTable = () => {\n    let currData = this.state.apiData;\n    let foundMatch = this.state.found;\n    let table = [];\n    //found is false when we get 404 error\n    if(!foundMatch){\n        table.push(<tr key={-1}><td>No Results</td></tr>);\n        return table;\n    } else {\n        for (let i = 0; i < currData.length; i++) {\n          console.log(this.state.apiData);\n          table.push(\n            <tbody>\n              <tr class=\"tRow\" key={currData[i].id}>\n                <td class=\"tableD\">\n                  <ul class=\"tItem\">\n                    <img src={currData[i].image_link}></img>\n                    <td><b>{currData[i].name}</b> </td>\n                    <p><b>Brand:</b> {currData[i].brand}<br/>\n                    <b>Product Type:</b> {currData[i].product_type}<br/>\n                    <b>Price:</b> ${currData[i].price_sign}{currData[i].price}</p>\n                  </ul>\n                </td>\n              </tr>\n            </tbody>\n          );\n        }\n        return table;\n    }\n}   \n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <h3>Search By Makeup Brand: </h3>\n          <input type=\"text\" value={this.state.userInput} placeholder=\"Search Field\" onChange={this.handleInputChange}/>\n          <button className=\"search-makeup\" onClick={this.handleSearchClick}>Search</button>\n        </div>\n        <br/>\n          <table id=\"data\">\n            <tbody>\n                {this.makeTable()}\n            </tbody>\n          </table>\n      </div>\n    );\n  }\n}\n\nexport default searchAPI;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}